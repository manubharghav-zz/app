package com.swych.mobile.db;

import com.swych.mobile.db.DaoSession;
import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END
/**
 * Entity mapped to table LIBRARY.
 */
public class Library {

    private Long id;
    private Long srcVersionId;
    private Long swychVersionId;
    private String srcLanguage;
    private String swychLanguage;
    private String title;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient LibraryDao myDao;

    private Version srcVersion;
    private Long srcVersion__resolvedKey;

    private Version swychVersion;
    private Long swychVersion__resolvedKey;


    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public Library() {
    }

    public Library(Long id) {
        this.id = id;
    }

    public Library(Long id, Long srcVersionId, Long swychVersionId, String srcLanguage, String swychLanguage, String title) {
        this.id = id;
        this.srcVersionId = srcVersionId;
        this.swychVersionId = swychVersionId;
        this.srcLanguage = srcLanguage;
        this.swychLanguage = swychLanguage;
        this.title = title;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getLibraryDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Long getSrcVersionId() {
        return srcVersionId;
    }

    public void setSrcVersionId(Long srcVersionId) {
        this.srcVersionId = srcVersionId;
    }

    public Long getSwychVersionId() {
        return swychVersionId;
    }

    public void setSwychVersionId(Long swychVersionId) {
        this.swychVersionId = swychVersionId;
    }

    public String getSrcLanguage() {
        return srcLanguage;
    }

    public void setSrcLanguage(String srcLanguage) {
        this.srcLanguage = srcLanguage;
    }

    public String getSwychLanguage() {
        return swychLanguage;
    }

    public void setSwychLanguage(String swychLanguage) {
        this.swychLanguage = swychLanguage;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    /** To-one relationship, resolved on first access. */
    public Version getSrcVersion() {
        Long __key = this.srcVersionId;
        if (srcVersion__resolvedKey == null || !srcVersion__resolvedKey.equals(__key)) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            VersionDao targetDao = daoSession.getVersionDao();
            Version srcVersionNew = targetDao.load(__key);
            synchronized (this) {
                srcVersion = srcVersionNew;
            	srcVersion__resolvedKey = __key;
            }
        }
        return srcVersion;
    }

    public void setSrcVersion(Version srcVersion) {
        synchronized (this) {
            this.srcVersion = srcVersion;
            srcVersionId = srcVersion == null ? null : srcVersion.getId();
            srcVersion__resolvedKey = srcVersionId;
        }
    }

    /** To-one relationship, resolved on first access. */
    public Version getSwychVersion() {
        Long __key = this.swychVersionId;
        if (swychVersion__resolvedKey == null || !swychVersion__resolvedKey.equals(__key)) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            VersionDao targetDao = daoSession.getVersionDao();
            Version swychVersionNew = targetDao.load(__key);
            synchronized (this) {
                swychVersion = swychVersionNew;
            	swychVersion__resolvedKey = __key;
            }
        }
        return swychVersion;
    }

    public void setSwychVersion(Version swychVersion) {
        synchronized (this) {
            this.swychVersion = swychVersion;
            swychVersionId = swychVersion == null ? null : swychVersion.getId();
            swychVersion__resolvedKey = swychVersionId;
        }
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

    // KEEP METHODS - put your custom methods here
    // KEEP METHODS END

}
