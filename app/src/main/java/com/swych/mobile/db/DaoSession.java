package com.swych.mobile.db;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.swych.mobile.db.Book;
import com.swych.mobile.db.Version;
import com.swych.mobile.db.Library;
import com.swych.mobile.db.Bookmark;
import com.swych.mobile.db.Sentence;
import com.swych.mobile.db.Structure;
import com.swych.mobile.db.PhraseReplacement;
import com.swych.mobile.db.Mapping;

import com.swych.mobile.db.BookDao;
import com.swych.mobile.db.VersionDao;
import com.swych.mobile.db.LibraryDao;
import com.swych.mobile.db.BookmarkDao;
import com.swych.mobile.db.SentenceDao;
import com.swych.mobile.db.StructureDao;
import com.swych.mobile.db.PhraseReplacementDao;
import com.swych.mobile.db.MappingDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig bookDaoConfig;
    private final DaoConfig versionDaoConfig;
    private final DaoConfig libraryDaoConfig;
    private final DaoConfig bookmarkDaoConfig;
    private final DaoConfig sentenceDaoConfig;
    private final DaoConfig structureDaoConfig;
    private final DaoConfig phraseReplacementDaoConfig;
    private final DaoConfig mappingDaoConfig;

    private final BookDao bookDao;
    private final VersionDao versionDao;
    private final LibraryDao libraryDao;
    private final BookmarkDao bookmarkDao;
    private final SentenceDao sentenceDao;
    private final StructureDao structureDao;
    private final PhraseReplacementDao phraseReplacementDao;
    private final MappingDao mappingDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        bookDaoConfig = daoConfigMap.get(BookDao.class).clone();
        bookDaoConfig.initIdentityScope(type);

        versionDaoConfig = daoConfigMap.get(VersionDao.class).clone();
        versionDaoConfig.initIdentityScope(type);

        libraryDaoConfig = daoConfigMap.get(LibraryDao.class).clone();
        libraryDaoConfig.initIdentityScope(type);

        bookmarkDaoConfig = daoConfigMap.get(BookmarkDao.class).clone();
        bookmarkDaoConfig.initIdentityScope(type);

        sentenceDaoConfig = daoConfigMap.get(SentenceDao.class).clone();
        sentenceDaoConfig.initIdentityScope(type);

        structureDaoConfig = daoConfigMap.get(StructureDao.class).clone();
        structureDaoConfig.initIdentityScope(type);

        phraseReplacementDaoConfig = daoConfigMap.get(PhraseReplacementDao.class).clone();
        phraseReplacementDaoConfig.initIdentityScope(type);

        mappingDaoConfig = daoConfigMap.get(MappingDao.class).clone();
        mappingDaoConfig.initIdentityScope(type);

        bookDao = new BookDao(bookDaoConfig, this);
        versionDao = new VersionDao(versionDaoConfig, this);
        libraryDao = new LibraryDao(libraryDaoConfig, this);
        bookmarkDao = new BookmarkDao(bookmarkDaoConfig, this);
        sentenceDao = new SentenceDao(sentenceDaoConfig, this);
        structureDao = new StructureDao(structureDaoConfig, this);
        phraseReplacementDao = new PhraseReplacementDao(phraseReplacementDaoConfig, this);
        mappingDao = new MappingDao(mappingDaoConfig, this);

        registerDao(Book.class, bookDao);
        registerDao(Version.class, versionDao);
        registerDao(Library.class, libraryDao);
        registerDao(Bookmark.class, bookmarkDao);
        registerDao(Sentence.class, sentenceDao);
        registerDao(Structure.class, structureDao);
        registerDao(PhraseReplacement.class, phraseReplacementDao);
        registerDao(Mapping.class, mappingDao);
    }
    
    public void clear() {
        bookDaoConfig.getIdentityScope().clear();
        versionDaoConfig.getIdentityScope().clear();
        libraryDaoConfig.getIdentityScope().clear();
        bookmarkDaoConfig.getIdentityScope().clear();
        sentenceDaoConfig.getIdentityScope().clear();
        structureDaoConfig.getIdentityScope().clear();
        phraseReplacementDaoConfig.getIdentityScope().clear();
        mappingDaoConfig.getIdentityScope().clear();
    }

    public BookDao getBookDao() {
        return bookDao;
    }

    public VersionDao getVersionDao() {
        return versionDao;
    }

    public LibraryDao getLibraryDao() {
        return libraryDao;
    }

    public BookmarkDao getBookmarkDao() {
        return bookmarkDao;
    }

    public SentenceDao getSentenceDao() {
        return sentenceDao;
    }

    public StructureDao getStructureDao() {
        return structureDao;
    }

    public PhraseReplacementDao getPhraseReplacementDao() {
        return phraseReplacementDao;
    }

    public MappingDao getMappingDao() {
        return mappingDao;
    }

}
